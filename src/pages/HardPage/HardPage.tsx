import React, { useEffect, useState } from 'react';
import QuestionList from '@components/Questions/QuestionList/QuestionList';
import QuestionService from '@services/QuestionService';
import type { Question } from '@/types';
import './HardPage.scss';

const HardPage: React.FC = () => {
  const [questions, setQuestions] = useState<Question[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    loadQuestions();
  }, []);

  const loadQuestions = async () => {
    try {
      setLoading(true);
      setError(null);
      const data = await QuestionService.getAllQuestionsByList('hard');
      setQuestions(data);
    } catch (err) {
      setError(err instanceof Error ? err.message : 'Failed to load questions');
    } finally {
      setLoading(false);
    }
  };

  if (loading) {
    return (
      <div className="hard-page hard-page--loading">
        <div className="hard-page__loader">–ó–∞–≥—Ä—É–∑–∫–∞ —Å–ª–æ–∂–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤...</div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="hard-page hard-page--error">
        <div className="hard-page__error">–û—à–∏–±–∫–∞: {error}</div>
      </div>
    );
  }

  return (
    <div className="hard-page">
      <div className="hard-page__header">
        <h1 className="hard-page__title">üî• –ü–ª–æ—Ö–æ –∑–∞–ø–æ–º–∏–Ω–∞—é—â–∏–µ—Å—è –≤–æ–ø—Ä–æ—Å—ã</h1>
        <p className="hard-page__description">
          –í–æ–ø—Ä–æ—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–µ–±—É—é—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –≤–Ω–∏–º–∞–Ω–∏—è –∏ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è
        </p>
      </div>

      <QuestionList
        questions={questions}
        emptyMessage="–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–ª–æ–∂–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤. –û—Ç–º–µ—Ç—å—Ç–µ –≤–æ–ø—Ä–æ—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–ª–æ—Ö–æ –∑–∞–ø–æ–º–∏–Ω–∞—é—Ç—Å—è."
      />
    </div>
  );
};

export default HardPage;