import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

// –ü–æ–ª—É—á–∞–µ–º __dirname –¥–ª—è ES –º–æ–¥—É–ª–µ–π
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –ü–æ–ª—É—á–∞–µ–º category id –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const categoryId = parseInt(process.argv[2]);

if (!categoryId) {
  console.error('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node filterByCategory.js <category_id>');
  console.error('–ü—Ä–∏–º–µ—Ä: node filterByCategory.js 32');
  process.exit(1);
}

try {
  // –ß–∏—Ç–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª
  const inputPath = path.join(__dirname, 'public', 'ru.json');
  const outputPath = path.join(__dirname, 'filtered.json');
  
  const rawData = fs.readFileSync(inputPath, 'utf8');
  const questions = JSON.parse(rawData);
  
  // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ category
  const filteredQuestions = questions.filter(question => question.category === categoryId);
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  fs.writeFileSync(outputPath, JSON.stringify(filteredQuestions, null, 2), 'utf8');
  
  console.log(`‚úÖ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!`);
  console.log(`üìä –í—Å–µ–≥–æ –≤–æ–ø—Ä–æ—Å–æ–≤: ${questions.length}`);
  console.log(`üéØ –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${categoryId}: ${filteredQuestions.length} –≤–æ–ø—Ä–æ—Å–æ–≤`);
  console.log(`üíæ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: ${outputPath}`);
  
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞:', error.message);
  process.exit(1);
}